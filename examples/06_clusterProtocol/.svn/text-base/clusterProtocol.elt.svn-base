system
	//init node
	module node1
	//id1=false,id2=false,id3=true,lid1=false,lid2=false,lid3=true,num1=true,num2=false;
		bool id1=false,id2=false,id3=true,lid1=false,lid2=false,lid3=true,num1=true,num2=false;
		bool count1=false,count2=false,maxid1,maxid2,maxid3,elec=true;
		location initelection,awaitack,processack;

		label elec1,ack21;
		label node1_gtjudge,node1_ltjudge;

		init initelection;

		//label elec1
		from initelection to awaitack on elec1;

		//label ack21;
		from awaitack to processack on ack21 do {
			maxid1=node2.maxid1;
			maxid2=node2.maxid2;
			maxid3=node2.maxid3;
		};

		//label node1_gtjudge
		from processack to awaitack on node1_gtjudge provided ((maxid1 & !lid1) | ((maxid1 | !lid1) & (maxid2 & !lid2)) | ((maxid1 | !lid1) & (maxid2 | !lid2) & (maxid3 & !lid3))) | ((maxid1 == lid1) & (maxid2 == lid2) & (maxid3 == lid3)) do {
			lid1 = maxid1;
			lid2 = maxid2;
			lid3 = maxid3;
			// count++;
			count1 = (count1 | count2) & (!count1 | !count2);
			count2 = !count2;
		};

		//label node1_ltjudge
		from processack to awaitack on node1_ltjudge provided (lid1 & !maxid1) | ((lid1 | !maxid1) & (lid2 & !maxid2)) | ((lid1 | !maxid1) & (lid2 | !maxid2) & (lid3 & !maxid3)) do {
			// count++;
			count1 = (count1 | count2) & (!count1 | !count2);
			count2 = !count2;
		};
	end

	//normal node
	module node2
		//bool id1=false, id2=true, id3=false, lid1=false, lid2=true, lid3=false, num1=true, num2=false;
		bool id1=false, id2=true, id3=false, lid1=false, lid2=true, lid3=false, num1=true, num2=false;
		bool count1=false,count2=false,maxid1,maxid2,maxid3,elec;
		location initcn,awaitack,processack,mediate;

		label elec1,elec2,elec3;
		label ack2,ack3;
		label ack42,ack21;
		label node2_gtjudge,node2_ltjudge;

		init initcn;

		//label elec1,elec2,elec3;
		from initcn to awaitack on elec1 do { elec=true; };
		from awaitack to awaitack on elec2;
		from awaitack to mediate on elec3;

		//label ack2,ack3;
		from awaitack to awaitack on ack2 do {
			// count++;
			count1 = (count1 | count2) & (!count1 | !count2);
			count2 = !count2;
		};
		from mediate to awaitack on ack3;

		//label ack42,ack21;
		from awaitack to processack on ack42 do {
			maxid1=node4.maxid1;
			maxid2=node4.maxid2;
			maxid3=node4.maxid3;
		};
		from awaitack to initcn on ack21 provided ((count1 == num1) & (count2 == num2));

		//label node2_gtjudge,node2_ltjudge
		from processack to awaitack on node2_gtjudge provided ((maxid1 & !lid1) | ((maxid1 | !lid1) & (maxid2 & !lid2)) | ((maxid1 | !lid1) & (maxid2 | !lid2) & (maxid3 & !lid3))) | ((maxid1 == lid1) & (maxid2 == lid2) & (maxid3 == lid3)) do {
			lid1 = maxid1;
			lid2 = maxid2;
			lid3 = maxid3;
			// count;
			count1 = (count1 | count2) & (!count1 | !count2);
			count2 = !count2;
		};
		from processack to awaitack on node2_ltjudge provided (lid1 & !maxid1) | ((lid1 | !maxid1) & (lid2 & !maxid2)) | ((lid1 | !maxid1) & (lid2 | !maxid2) & (lid3 & !maxid3)) do {
			// count;
			count1 = (count1 | count2) & (!count1 | !count2);
			count2 = !count2;
		};
	end

	//normal node
	module node3
		bool id1=false, id2=true, id3=true, lid1=false, lid2=true, lid3=true, num1=true, num2=false;
		bool count1=false,count2=false,maxid1,maxid2,maxid3,elec;
		location initcn,awaitack,processack,mediate;

		label elec1,elec2,elec3;
		label ack2,ack3;
		label ack53,ack31;
		label node3_gtjudge,node3_ltjudge;

		init initcn;

		//label elec1,elec2,elec3;
		from initcn to awaitack on elec1 do {elec = true;};
		from awaitack to mediate on elec2;
		from awaitack to awaitack on elec3;

		//label ack2,ack3;
		from mediate to awaitack on ack2;
		from awaitack to awaitack on ack3 do {
			// count++;
			count1 = (count1 | count2) & (!count1 | !count2);
			count2 = !count2;
		};

		//label ack53,ack31;
		from awaitack to processack on ack53 do {
			maxid1 = node5.maxid1;
			maxid2 = node5.maxid2;
			maxid3 = node5.maxid3;
		};
		from awaitack to initcn on ack31 provided ((count1 == num1) & (count2 == num2));

		//label node3_gtjudge,node3_ltjudge
		from processack to awaitack on node3_gtjudge provided ((maxid1 & !lid1) | ((maxid1 | !lid1) & (maxid2 & !lid2)) | ((maxid1 | !lid1) & (maxid2 | !lid2) & (maxid3 & !lid3))) | ((maxid1 == lid1) & (maxid2 == lid2) & (maxid3 == lid3)) do {
			lid1 = maxid1;
			lid2 = maxid2;
			lid3 = maxid3;
			// count;
			count1 = (count1 | count2) & (!count1 | !count2);
			count2 = !count2;
		};
		from processack to awaitack on node3_ltjudge provided (lid1 & !maxid1) | ((lid1 | !maxid1) & (lid2 & !maxid2)) | ((lid1 | !maxid1) & (lid2 | !maxid2) & (lid3 & !maxid3)) do {
			// count;
			count1 = (count1 | count2) & (!count1 | !count2);
			count2 = !count2;
		};
	end

	//normal node
	module node4
		bool id1=true, id2=false, id3=false, lid1=true, lid2=false, lid3=false, num1=false, num2=true;
		bool count1=false,count2=false,maxid1,maxid2,maxid3,elec;
		location initcn,awaitack,processack,mediate;

		label elec2;
		label elec4,elec5;
		label ack4,ack5;
		label ack42;
		label node4_gtjudge,node4_ltjudge;

		init initcn;

		//label elec2;
		from initcn to awaitack on elec2 do {elec = true;};

		//label elec4,elec5;
		from awaitack to awaitack on elec4;
		from awaitack to mediate on elec5;

		//label ack4,ack5;
		from mediate to awaitack on ack4;
		from awaitack to awaitack on ack5 do {
			// count++;
			count1 = (count1 | count2) & (!count1 | !count2);
			count2 = !count2;
		};

		//label ack42;
		from awaitack to initcn on ack42 provided ((count1==num1) & (count2==num2));

		//label node4_gtjudge,node4_ltjudge
		from processack to awaitack on node4_gtjudge provided ((maxid1 & !lid1) | ((maxid1 | !lid1) & (maxid2 & !lid2)) | ((maxid1 | !lid1) & (maxid2 | !lid2) & (maxid3 & !lid3))) | ((maxid1 == lid1) & (maxid2 == lid2) & (maxid3 == lid3)) do {
			lid1 = maxid1;
			lid2 = maxid2;
			lid3 = maxid3;
			// count;
			count1 = (count1 | count2) & (!count1 | !count2);
			count2 = !count2;
		};
		from processack to awaitack on node4_ltjudge provided (lid1 & !maxid1) | ((lid1 | !maxid1) & (lid2 & !maxid2)) | ((lid1 | !maxid1) & (lid2 | !maxid2) & (lid3 & !maxid3)) do {
			// count;
			count1 = (count1 | count2) & (!count1 | !count2);
			count2 = !count2;
		};
	end

	//normal node
	module node5
		bool id1=true, id2=false, id3=true, lid1=true, lid2=false, lid3=true, num1=false, num2=true;
		bool count1=false,count2=false,maxid1,maxid2,maxid3,elec;
		location initcn,awaitack,processack,mediate;

		label elec3;
		label elec4,elec5;
		label ack4,ack5;
		label ack53;
		label node5_gtjudge,node5_ltjudge;

		init initcn;

		//label elec3;
		from initcn to awaitack on elec3 do {elec = true;};

		//label elec4,elec5;
		from awaitack to mediate on elec4;
		from awaitack to awaitack on elec5;

		//label ack4,ack5;
		from awaitack to awaitack on ack4 do {
			// count++;
			count1 = (count1 | count2) & (!count1 | !count2);
			count2 = !count2;
		};
		from mediate to awaitack on ack5;

		//label ack53;
		from awaitack to initcn on ack53 provided ((count1 == num1) & (count2 == num2));

		//label node5_gtjudge,node5_ltjudge
		from processack to awaitack on node5_gtjudge provided ((maxid1 & !lid1) | ((maxid1 | !lid1) & (maxid2 & !lid2)) | ((maxid1 | !lid1) & (maxid2 | !lid2) & (maxid3 & !lid3))) | ((maxid1 == lid1) & (maxid2 == lid2) & (maxid3 == lid3)) do {
			lid1 = maxid1;
			lid2 = maxid2;
			lid3 = maxid3;
			// count;
			count1 = (count1 | count2) & (!count1 | !count2);
			count2 = !count2;
		};
		from processack to awaitack on node5_ltjudge provided (lid1 & !maxid1) | ((lid1 | !maxid1) & (lid2 & !maxid2)) | ((lid1 | !maxid1) & (lid2 | !maxid2) & (lid3 & !maxid3)) do {
			// count;
			count1 = (count1 | count2) & (!count1 | !count2);
			count2 = !count2;
		};
	end

	//INVARSPEC !(node4.location==awaitack)
	INVARSPEC !((node1.location == awaitack) & (node2.location == initcn) & (node3.location == initcn) & (node4.location == initcn) & (node5.location == initcn)) | (node1.lid1 & !node1.lid2 & node1.lid3)
end
